name: Continous Builds

on:
  push:
    branches: [ master ]

jobs:

  job_1:
      runs-on: ubuntu-16.04
      steps:
        - uses: actions/checkout@v2
        - name: install qt5
          run: |
             sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-xenial
             sudo apt-get update
             sudo apt-get install libgl1-mesa-dev qt515base qt515webengine qt515webchannel qt515multimedia qt515svg 
        - name: build
          run: |
              export QTDIR=/opt/qt515
              export PATH=/opt/qt515/bin:$PATH
              qmake src/OpenJournal.pro CONFIG+=released
              make
              make clean
        - name: appimage
          run: |
              cd build
              export QTDIR=/opt/qt515
              export PATH=/opt/qt515/bin:$PATH
              wget -O deploy.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage
              chmod +x deploy.AppImage
              mkdir -p appdir/usr/bin/
              mv OpenJournal appdir/usr/bin/
              mkdir -p appdir/usr/share/applications/
              cp ../OpenJournal.desktop appdir/usr/share/applications/
              mkdir -p appdir/usr/share/icons/hicolor/256x256/
              cp ../resources/icon.png appdir/usr/share/icons/hicolor/256x256/
              ./deploy.AppImage ./appdir/usr/share/applications/OpenJournal.desktop -exclude-libs="libnss3.so,libnssutil3.so" -no-translations -bundle-non-qt-libs -appimage
              mv OpenJournal*.AppImage OpenJournal-x86_64.AppImage
        - name: Linux artefact
          uses: actions/upload-artifact@v1
          with:
            name: OpenJournalLinux
            path: ./build/OpenJournal-x86_64.AppImage
  job_2:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v2
        - uses: ilammy/msvc-dev-cmd@v1
        - uses: jurplel/install-qt-action@v2
          with:
            host: 'windows'
            target: 'desktop'
            arch: 'win64_msvc2019_64'
            dir: '${{ github.workspace }}/Qt/'
            install-deps: 'true'
            modules: 'qtwebengine qtmultimedia'
            cached: 'false'
        - name: build
          shell: cmd
          run : |
               choco install nsis
               cd src/
               qmake OpenJournal.pro -spec win32-msvc "CONFIG+=qtquickcompiler"
               nmake release
               mkdir OpenJournal
               cp build/OpenJournal.exe OpenJournal/OpenJournal.exe
               windeployqt OpenJournal/OpenJournal.exe
               7z a C:\OpenJournal.zip OpenJournal/
               cd ..
               makensis.exe /V3 resources/installer.nsi
        - name: Windows artefact
          uses: actions/upload-artifact@v1
          with:
            name: OpenJournalWindows
            path: C:/OpenJournal.zip
        - name: Windows artefact installer
          uses: actions/upload-artifact@v1
          with:
            name: OpenJournalWindowsInstaller
            path: C:/OpenJournalInstaller.exe

  job_3:
      runs-on: macos-latest
      steps:
        - uses: actions/checkout@v2
        - uses: jurplel/install-qt-action@v2
          with:
            host: 'mac'
            target: 'desktop'
            dir: '${{ github.workspace }}/Qt/'
            install-deps: 'true'
            modules: 'qtwebengine'
            cached: 'false'
            extra: '--external 7z'
        - name: install
          run: |
              brew install sqlite
        - name: build
          run: |
              qmake src/OpenJournal.pro
              make
              cd build/
              macdeployqt OpenJournal.app -always-overwrite -verbose=0
              wget https://raw.githubusercontent.com/arl/macdeployqtfix/master/macdeployqtfix.py
              #python2.7 macdeployqtfix.py OpenJournal.app/Contents/MacOS/OpenJournal ../../Qt/5.15.0/
              hdiutil create -volname OpenJournal -srcfolder OpenJournal.app -ov -format UDZO OpenJournal.dmg


        - name: Mac artefact
          uses: actions/upload-artifact@v1
          with:
            name: OpenJournalMac
            path: ./build/OpenJournal.dmg

  job_4:
      needs: [job_1, job_2, job_3]
      runs-on: ubuntu-latest
      steps:
        - name: Delete previous release
          uses: dev-drprasad/delete-tag-and-release@v0.1.2
          with:
            delete_release: true
            tag_name: continuous
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: create release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: continuous
            release_name: Continuous release
            draft: false
            prerelease: true

        - name: Download linux
          uses: actions/download-artifact@v1
          with:
            name: OpenJournalLinux
        - name: upload release asset
          id: upload-release-asset-Linux
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: OpenJournalLinux/OpenJournal-x86_64.AppImage
            asset_name: OpenJournal-x86_64.AppImage
            asset_content_type: application/zip
        - name: Download Windows
          uses: actions/download-artifact@v1
          with:
            name: OpenJournalWindows
        - name: upload release asset-Win
          id: upload-release-asset-Win
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: OpenJournalWindows/penJournal.zip
            asset_name: OpenJournal.zip
            asset_content_type: application/zip
        - name: Download Windows Installer
          uses: actions/download-artifact@v1
          with:
            name: OpenJournalWindowsInstaller
        - name: upload release asset-Win installer
          id: upload-release-asset-Win-Installer
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: OpenJournalWindowsInstaller/penJournalInstaller.exe
            asset_name: OpenJournalInstaller.exe
            asset_content_type: application/zip
        - name: Download Mac
          uses: actions/download-artifact@v1
          with:
            name: OpenJournalMac
        - name: upload release asset_mac
          id: upload-release-asset_mac
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: OpenJournalMac/OpenJournal.dmg
            asset_name: OpenJournal.dmg
            asset_content_type: application/zip
